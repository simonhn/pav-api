<div>

<p>
The pav:api exposes playlist data and is currently under development.
</p>

<h2>resources</h2>

<ul>
	<li><a href ="/v1/artists?limit=15&channel=1">/artists {html | xml | json}</a></li>

	<li><a href ="/v1/artist/2">/artist/:id {html | xml | json}</a></li>

	<li><a href ="/v1/artist/2/tracks">/artist/:id/tracks {html | xml | json}</a></li>

	
	<br />
	<li><a href ="/v1/tracks?limit=4">/tracks/ {html | xml | json}</a></li></li>
	
	<li><a href ="/v1/track/2">/track/:id {html | xml | json}</a></li>
	
	<li>post: /track {json}</li>

	<li><a href ="/v1/track/6/artists">/track/:id/artists {html | xml | json}</a></li>

	<li><a href ="/v1/track/6/albums">/track/:id/albums {html | xml | json}</a></li>

	<li><a href ="/v1/track/6/plays">/track/:id/plays {html | xml | json}</a></li>
	
	
	<br />	
	<li><a href ="/v1/albums?channel=4">/albums {html | xml | json}</a></li>
		
	<li><a href ="/v1/album/2">/album/:id {html | xml | json}</a></li>

	<li><a href ="/v1/album/2/tracks.xml">/album/:id/tracks {html | xml | json}</a></li>
	
	
	<br />		
	<li><a href ="/v1/plays?channel=4&from=2011-04-20 16:00:00">/plays { html | xml | json}</a></li>
		
	<li><a href ="/v1/play/2.json">/play/:id {json}</a></li>
	
	
	<br />
	<li><a href ="/v1/channels.xml">/channels {xml | json}</a></li>

	<li><a href ="/v1/channel/1.xml">/channel/:id {xml | json}</a></li>
	
	<li>post: /channel {json}</li>

	<li>put: /channel/:id {json}</li>
	
	
	<br />
	<li><a href ="/v1/chart/track.xml">/chart/track {html | xml | json}</a></li>

	<li><a href ="/v1/chart/artist.xml?from=2011-04-20&to=2011-04-27">/chart/artist?from=yyyy-mm-dd&to=yyyy-mm-dd {xml | json}</a></li>
	
	<li class="missing"><a href ="/v1/chart/album.xml">/chart/album {xml | json}</a></li>
	
	
	<br />	
	<li><a href ="/v1/search/a">/search/query {html | xml | json}</a></li>

	
	<br />
	<li><a href ="/v1/stats">/stats</a></li>
	
</ul>

<p>
	<h2>query parameters</h2>
	<span>Some paths accepts the following query parameters:
	<ul> 
		<li>channel, default is all channels</li>
		<li>limit, default is 10</li>
		<li>callback, for cross-domain access jsonp is delivered to requests with 'callback' query parameter and json as return type.</li>
		<li>format, return type format (html, json, xml)</li>
		<li>type, to specify lookup type, mbid</li>
		<li class="missing">fields, for partial responses</li>
		<li class="missing">sort, for ordering results</li>
		<li class="missing">key, is required for all calls to the api</li>
		<li class="missing">to (to date) in yyyy-mm-dd format</li>
		<li class="missing">from (from date) in yyyy-mm-dd format</li>
	</ul>
</p>

<p>
	<h2>identifiers</h2>
	To lookup a specific artist/track/album you can use pav IDs or Musicbrainz IDs where available.
</p>

<p>
	<h2>authentication</h2>
	All put and post requests require authentication
</p>

<p>
	<h2>versioning</h2>
	The version of the api you wish to use is specified at the root path of resources. The current version is v1.
</p>

<p>
	<h2>return types</h2>
	Return type can selected by appending the desired content type to the url (.html, .xml, .json) or by adding ?format=(html, xml, json) to the query parameter. Use only one of these methods when doing a request.
<br />
 Default return type is currently html but will change to json when the API is put in production.
</p>

<p>
	<h2>return codes</h2>
	The API attempts to return appropriate HTTP status codes for every request.
	<ul>
		<li>200 OK: Request succeeded</li>
		<li>400 Bad Request: Your request was invalid and we'll return an error message telling you why</li>
		<li>401 Not Authorized: You did not provide the right credentials</li>
		<li>404 Not Found: The URI requested is invalid or the resource requested, such as a user, does not exists</li>
		<li>500 Internal Server Error: Something is broken.</li>
		<li>503 Service Unavailable: You cannot make this request at this time. Servers are up, but overloaded with requests</li>
	</ul>
</p>

<p>
	<h2>usage</h2>
	Please be nice when using the api. If you plan to make massive amounts of calls please advise us.
</p>

</div>
